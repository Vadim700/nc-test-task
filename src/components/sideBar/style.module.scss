@import "../../common.scss";

.root {
	@media (max-width: $mobile) {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		overflow: auto;
		transition: all 0.3s ease 0s;
	}
}

.inner {
	display: flex;
	flex-direction: column;
	row-gap: 15px;

	@media (max-width: $mobile) {
		position: relative;
		width: 400px;
		height: 100%;
		top: 0;
		z-index: 4;
		left: 15px;
	}

	@media (max-width: $mobileSmall) {
		width: 300px;
	}
}

.burger {
	display: none;
	width: 28px;
	height: 28px;

	@media (max-width: $mobile) {
		display: inline-block;
		position: sticky;
		left: 15px;
		top: 10px;
		font-size: 28px;
		z-index: 5;
	}

	@media (max-width: 350px) {
		top: 5px;
	}
}

.header {
	display: flex;
	align-items: center;
	column-gap: 10px;
	min-height: 60px;
	padding: 0 10px;

	border-radius: 4px;
	background-color: var(--white);
	box-shadow: 0px 1px 4px 0px rgba(19, 19, 19, 0.1);

	button {
		display: flex;
		justify-content: center;
		align-items: center;
		transition: all 0.3s ease 0s;
		cursor: pointer;

		height: 34px;
		width: 34px;
		padding: 0;

		border-radius: 50%;
		border: none;
		color: var(--gray);

		@media (hover: hover) {
			&:hover {
				background-color: #4198c5;
				color: var(--white);
			}
		}

		&:first-child {
			cursor: pointer;
			margin-right: auto;
		}
	}
}

.searchBlock {
	display: flex;
	align-items: center;
	justify-content: space-between;
	column-gap: 14px;

	width: 100%;

	height: 38px;

	& .label {
		position: relative;
		display: flex;
		align-items: center;
		flex: 1;

		padding: 9px;

		border-radius: 20px;
		border: 1px solid var(--cdcdcd, #cdcdcd);
		color: var(--gray);
		transition: all 0.2s ease 0s;

		svg {
			margin-left: -2px;
			flex-shrink: 0;

			position: absolute;
			top: 50%;
			left: 22px;
			transform: translate(-50%, -50%);
		}

		input {
		}
	}

	button {
		transform: rotate(45deg);
		cursor: pointer;
	}
}

.action {
	display: flex;
	justify-content: space-between;
	align-items: center;
	column-gap: 10px;
	padding: 0px 10px 0px 15px;

	button {
		margin: 0;
		padding: 0;

		color: var(--gray);
		font-family: SF Pro Display;
		font-feature-settings:
			"clig" off,
			"liga" off;
		font-size: 14px;
		font-style: normal;
		font-weight: 400;
		line-height: 1.42;

		border: none;
		cursor: pointer;

		&:last-child {
			margin-left: 5px;
		}

		@media (max-width: $mobile) {
			background-color: transparent;
			color: var(--white);
		}
	}
}

.count {
	padding: 2px 0px;

	display: flex;
	justify-content: center;
	align-items: center;

	font-family: SF Pro Display;
	font-size: 14px;
	font-weight: 500;
	line-height: 1;
	color: var(--white);
	min-width: 28px;
	letter-spacing: 1px;

	border-radius: 9px;
	background: var(--gray);
}

.label {
	display: flex;
	align-items: center;
	color: var(--gray);
	cursor: pointer;

	@media (max-width: $mobile) {
		color: var(--white);
	}

	input {
		margin-right: 10px;
	}
}

.selected {
	margin-right: auto;

	display: flex;
	justify-content: center;
	align-items: center;
	line-height: 1;
	padding: 2px 0;

	background-color: var(--blue);
	color: var(--white);

	min-width: 28px;

	border-radius: 9px;
}

.checkbox {
	border-radius: 4px;
	border: 1px solid var(--stroke);
	background: var(--white);

	width: 18px;
	height: 18px;
	position: relative;

	cursor: pointer;

	-moz-appearance: none;
	-webkit-appearance: none;
	-o-appearance: none;

	&::before {
		position: absolute;
		top: 0;
		left: 0;
	}

	&:checked {
		border: none;
		&::before {
			content: url("../../../public/images/icons/checkbox.png");
		}
	}
}

.form {
	input {
		display: block;

		margin: 0;
		padding: 0;
		padding: 9px;

		border: none;
		outline: none;
		border-radius: 4px;
		box-shadow: 0px 1px 4px 0px rgba(19, 19, 19, 0.1);

		font-size: 16px;

		line-height: 1.25;
		min-width: 0;

		&::placeholder {
			font-size: 14px;
		}
	}

	p {
		margin: 0;
	}

	&__body {
		display: flex;
		flex-direction: column;
		row-gap: 10px;
	}

	&__row {
		display: flex;
		justify-content: space-between;
		column-gap: 15px;
	}

	&__name {
		padding: 0;
	}

	&__age {
	}

	&__sex {
		flex: 50%;
		border: none;
		outline: none;
		padding: 0 9px;

		border-radius: 4px;
		line-height: 1.25;
		font-size: 12px;
		color: var(--gray);

		box-shadow: 0px 1px 4px 0px rgba(19, 19, 19, 0.1);
	}
}

.btnStart {
	flex-shrink: 0;
}

.search {
	position: relative;

	width: 100%;
	display: flex;
	align-items: center;
	justify-content: space-between;
	column-gap: 10px;

	button {
		font-size: 24px;
		flex-shrink: 0;
	}
}

.inputGroup {
	position: relative;
	z-index: 2;

	display: grid;
	grid-template-columns: 34px auto;
	width: 84%;
}

.startButton {
	position: relative;
	z-index: 1;
}

.input {
	font-family: "SF Pro Display", sans-serif;
	border: none;
	outline: none;
	padding-left: 30px;
	width: 100%;

	position: absolute;
	padding-right: 5px;

	top: -2px;
	left: -1px;

	display: flex;
	justify-items: start;

	padding-left: 45px;
	width: 98%;
	height: 34px;

	border-radius: 20px;
	border: 1px solid var(--stroke);
}

// ===== SearchBlock CSSTransiton start ======
.inputWidthEnter {
	width: 0;
}
.inputWidthEnterActive {
	width: 98%;
	transition: width 0.3s ease 0s;
}
.inputWidthExit {
	width: 98%;
}
.inputWidthExitActive {
	width: 0%;
	transition: width 0.3s ease 0s;
}
// ===== SearchBlock CSSTransiton end ======

// ===== UserForm CSSTransition star ======
.fadeBodyEnter {
	height: 0;
}
.fadeBodyEnterActive {
	height: 130px;
	transition: all 0.3s ease 0s;
}
.fadeBodyExit {
	height: 130px;
}
.fadeBodyExitActive {
	height: 0;
	transition: all 0.3s ease 0s;
}
.wrapperForm {
	overflow: hidden;
	transition: all 0.5s ease 0s;

	@media (max-width: $mobile) {
		overflow: visible;
	}
}
// ===== UserForm CSSTransition end ======

// ===== SideBar CSSTransition start ======
.asideBlockEnter {
	left: -410px;
}
.asideBlockEnterActive {
	left: 15px;
	transition: left 0.3s ease;
}
.asideBlockExit {
	left: 15px;
}
.asideBlockExitActive {
	left: -410px;
	transition: left 0.3s ease;
}
// ===== SideBar CSSTransition end ======

// ===== Filter CSSTransition start ======
.filterEnter {
	height: 0;
}
.filterEnterActive {
	height: 65px;
	transition: height 0.3s ease;
}
.filterExit {
	height: 65px;
}
.filterExitActive {
	height: 0;
	transition: height 0.3s ease;
}

.filterWrapper {
	overflow: hidden;
	transition: all 0.5s ease 0s;

	@media (max-width: $mobile) {
		overflow: visible;
	}
}
// ===== Filter CSSTransition end ======
